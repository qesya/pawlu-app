// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button renders left icon when provided 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    style={
      [
        {
          "alignContent": "center",
          "flexDirection": "column",
        },
        [
          {
            "alignItems": "center",
            "backgroundColor": "#1a73e8",
            "borderRadius": 8,
            "elevation": 1,
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
            "paddingHorizontal": 20,
            "shadowColor": "rgba(18, 23, 33, 1)",
            "shadowOffset": {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 0.05,
            "shadowRadius": 2,
          },
          undefined,
          {
            "transform": [
              {
                "scale": 1,
              },
            ],
          },
        ],
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        },
      ]
    }
    testID="pressable-btn-inner-view-test"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        fill="none"
        focusable={false}
        height={24}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "marginRight": 8,
            },
            {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={24}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            d="M4 12h16m0 0-6-6m6 6-6 6"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4294967295,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth={2}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
      <Text
        style={
          [
            {
              "fontFamily": "InterSemibold",
              "fontSize": 14,
              "lineHeight": 17.5,
            },
            {
              "textAlign": "left",
            },
            undefined,
            [
              {
                "color": "#ffffff",
                "textDecorationLine": "none",
              },
              undefined,
            ],
          ]
        }
      >
        With Icon
      </Text>
    </View>
  </View>
</View>
`;

exports[`Button renders right icon when provided 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    style={
      [
        {
          "alignContent": "center",
          "flexDirection": "column",
        },
        [
          {
            "alignItems": "center",
            "backgroundColor": "#1a73e8",
            "borderRadius": 8,
            "elevation": 1,
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
            "paddingHorizontal": 20,
            "shadowColor": "rgba(18, 23, 33, 1)",
            "shadowOffset": {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 0.05,
            "shadowRadius": 2,
          },
          undefined,
          {
            "transform": [
              {
                "scale": 1,
              },
            ],
          },
        ],
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        },
      ]
    }
    testID="pressable-btn-inner-view-test"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          [
            {
              "fontFamily": "InterSemibold",
              "fontSize": 14,
              "lineHeight": 17.5,
            },
            {
              "textAlign": "left",
            },
            undefined,
            [
              {
                "color": "#ffffff",
                "textDecorationLine": "none",
              },
              undefined,
            ],
          ]
        }
      >
        With Icon
      </Text>
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        fill="none"
        focusable={false}
        height={24}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "marginLeft": 8,
            },
            {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={24}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            d="M4 12h16m0 0-6-6m6 6-6 6"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4294967295,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth={2}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;
